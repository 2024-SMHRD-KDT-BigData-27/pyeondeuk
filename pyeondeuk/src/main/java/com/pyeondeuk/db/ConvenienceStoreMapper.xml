<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pyeondeuk.db.ConvenienceStoreMapper">

	<insert id="insertConvenienceStore"
		parameterType="com.pyeondeuk.model.ConvenienceStoreDTO">
		INSERT INTO CONVENIENCE_STORES (
		CS_SEQ, LONGITUDE, LATITUDE, BRAND_SEQ, ADDRESS, ROAD_ADDRESS, CS_NAME, CREATED_AT
		) VALUES
		(
		CONVENIENCE_STORES_SEQ.NEXTVAL, #{longitude}, #{latitude}, #{brandSeq}, #{addressName}, #{roadAddressName}, #{csName}, SYSDATE
		)
	</insert>

	<!-- 중복 확인 -->
	<select id="isDuplicateStore" resultType="int">
		SELECT COUNT(1)
		FROM
		CONVENIENCE_STORES
		WHERE CS_NAME = #{csName}
	</select>

	<select id="getNearbyStores"
		resultType="com.pyeondeuk.model.ConvenienceStoreDTO">
		SELECT
		CS_NAME AS csName,
		ROAD_ADDRESS AS roadAddressName,
		ADDRESS AS addressName,
		LONGITUDE AS longitude,
		LATITUDE AS latitude,
		CS_TAG AS csTag,
		CS_NICK AS csNick,
		BRAND_SEQ AS brandSeq,
		CS_SEQ AS
		csSeq
		FROM CONVENIENCE_STORES
		WHERE POWER(LATITUDE - #{latitude}, 2) +
		POWER(LONGITUDE - #{longitude}, 2)
		&lt;= POWER(#{radius} / 111.32, 2)
	</select>

	<select id="getAverageRating" parameterType="int" resultType="double">
		SELECT AVG(RATING)
		FROM CSREVIEW
		WHERE CS_SEQ = #{csSeq}
	</select>
	
	<!-- 리뷰 가져오기 -->
    <select id="getReviewsForStore" parameterType="int" resultType="string">
        SELECT COMMENT_CONTENT
        FROM CSREVIEW
        WHERE CS_SEQ = #{csSeq}
    </select>

    <!-- 별명과 태그 업데이트 -->
    <update id="updateNickAndTag">
        UPDATE CONVENIENCE_STORES
        SET CS_NICK = #{csNick}, CS_TAG = #{csTag}
        WHERE CS_SEQ = #{csSeq}
    </update>
    
    	<insert id="saveReview"
		parameterType="com.pyeondeuk.model.MemberDTO">
		INSERT INTO CSREVIEW (REVIEW_SEQ, CS_SEQ, EMAIL,
		COMMENT_CONTENT,
		RATING, CREATED_AT)
		VALUES (
		CSREVIEW_SEQ.NEXTVAL,
		#{csSeq},
		#{email},
		#{commentContent},
		#{rating},
		sysdate)
	</insert>


	<select id="getAllReviews"
		resultType="com.pyeondeuk.model.MemberDTO">
		SELECT
		CS_SEQ AS csSeq,
		EMAIL AS email,
		COMMENT_CONTENT AS
		commentContent,
		RATING AS rating,
		TO_CHAR(CREATED_AT, 'YYYY-MM-DD
		HH24:MI:SS') AS createdAt
		FROM CSREVIEW
		ORDER BY CREATED_AT DESC
	</select>

	<select id="getReviewsByCsSeq" parameterType="int"
		resultType="com.pyeondeuk.model.MemberDTO">
		SELECT
		R.CS_SEQ AS csSeq,
		U.NICK AS nick,
		R.EMAIL AS email,
		R.COMMENT_CONTENT AS commentContent,
		R.RATING AS rating,
		TO_CHAR(R.CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS createdAt
		FROM
		CSREVIEW R
		JOIN USERS U ON R.EMAIL = U.EMAIL
		WHERE R.CS_SEQ =
		#{csSeq}
		ORDER BY R.CREATED_AT DESC
	</select>

</mapper>